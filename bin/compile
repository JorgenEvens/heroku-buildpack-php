#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
# heroku create --buildpack https://github.com/Sitebase/heroku-buildpack-php.git#develop

#http://bubobox.deploy.s3.amazonaws.com/heroku/composer.phar

# fail fast
set -e

# config
APACHE_VERSION="2.2.22"
APACHE_PATH="apache"
PHP_VERSION="5.3.10"
PHP_PATH="php"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

echo "-----> Run Sitebase buildpack"

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

APACHE_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

#PHP_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/php-5.4.1-with-fpm-heroku.tar.gz"
PHP_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/php-$PHP_VERSION.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

# composer
echo "-----> Installing Composer"
COMPOSER_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/composer.phar"
curl $COMPOSER_URL -s -o $BUILD_DIR/bin/composer
COMPOSER=$BUILD_DIR/bin/composer
chmod +x $COMPOSER

echo "-----> Installing Dependencies"
echo "       Using `$COMPOSER --version`"
cd $BUILD_DIR
GIT_DIR_ORIG=$GIT_DIR
unset GIT_DIR
echo "       Running composer from `pwd`"
$COMPOSER install
cd $LP_DIR
GIT_DIR=$GIT_DIR_ORIG
unset GIT_DIR_ORIG

ln -s $COMPOSER_VENDOR_DIR $BUILD_DIR/

mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\"\$HOME/bin:\$HOME/vendor/bin:\$PATH\"" > $BUILD_DIR/.profile.d/composer.sh

# update config filesgs
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

# set a slug_id identifier
slug_id=$(php/bin/php -r "echo md5(uniqid('', TRUE));")
echo $slug_id > SLUG_ID
echo "Creating Slug Identifier file with id: ${slug_id}"

cat >>boot.sh <<EOF
echo "Checking for WWWROOT environment variable..."
if [ -n "\${WWWROOT:+x}" ]; then
  sed -ie "s%/app/www%/app/www\$WWWROOT%" /app/apache/conf/httpd.conf
fi

for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/ext
export PHP_INI_SCAN_DIR=/app/www

# let's check for hook scripts
if [ -d www/.hooks ]; then
  for file in www/.hooks/*.sh; do
    if [ -f \$file ]; then
      /bin/bash \$file
    fi
  done
fi

echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
